// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ReservationStatus {
  PENDING
  APPROVED
  CANCELLED
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         Role          @default(USER)
  avatar       String?
  reservations Reservation[]
  hotels       Hotel[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("users")
}

model Hotel {
  id           Int           @id @default(autoincrement())
  name         String
  description  String
  image        String?
  price        Float
  address      String
  reservations Reservation[]
  ownerId      Int
  owner        User          @relation(fields: [ownerId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("hotels")
}

model Reservation {
  id        Int               @id @default(autoincrement())
  userId    Int
  user      User              @relation(fields: [userId], references: [id])
  hotelId   Int
  hotel     Hotel             @relation(fields: [hotelId], references: [id])
  checkIn   DateTime
  checkOut  DateTime
  total     Float
  status    ReservationStatus @default(PENDING)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  @@map("reservations")
}
